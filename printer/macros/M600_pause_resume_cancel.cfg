[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  {% set swap = params.SWAP | default(0) | int %}   ; is this a filament swap?
  {% set x = printer.gcode_move.position.x %}
  {% set y = printer.gcode_move.position.y %}
  {% set zhop = 15 %}
  {% set retract = -5 %}

  {% if printer['pause_resume'].is_paused|int == 0 %}
    M117 Pausing...

    ; TODO: Create custom LED color effect for PAUSED
    STATUS_LEVELING

    ; Set variables in RESUME macro
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=swap VALUE={swap}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}  ; set hotend temp variable for reference in resume macro
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=x VALUE={x}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=y VALUE={y}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=prime VALUE={retract * -1}

    SAVE_GCODE_STATE NAME=PAUSE                                                        ; save current print position for resume
    BASE_PAUSE                                                                         ; pause print

    G91                                                                              ; relative positioning
    G1 E{retract} F1000     ; Retract 60mm filament

    {% if (printer.gcode_move.position.z + zhop) < printer.toolhead.axis_maximum.z %}  ; check that zhop doesn't exceed z max
      G0 Z{zhop} F900                                                                  ; raise Z up by z hop amount
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={zhop}                       ; set z hop variable for reference in resume macro
    {% else %}
      { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
    {% endif %}

    {% if swap == 1 %}
      G1 E-30 F1000     ; Retract some extra filament to let it cool for a few seconds
      G4 5000           ; Delay 5 seconds to let the end of the filamant cool off
    {% endif %}

    G90                                                                                  ; absolute positioning
    G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
    SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)

    ; Turn off hotend unless swapping filament
    {% if swap == 0 %}
      M104 S0
    {% endif %}

    SET_IDLE_TIMEOUT TIMEOUT=7200                                                        ; set timeout to 2 hours
  {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_swap: 0
variable_etemp: 0
variable_x: 0
variable_y: 0
variable_prime: 0
variable_zhop: 0
gcode:
  {% set z = printer.gcode_move.position.z %}       ; current z position (after hop, if any)

  {% if printer['pause_resume'].is_paused|int == 1 %}
    M117 Resuming...

    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}    ; set timeout back to configured value

    ; Reset extruder to its original temperature
    {% if etemp > 0 %}
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp}
    {% endif %}

    RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100     ; return to parked position in case toolhead was moved during pause
    G91                                                          ; relative positioning

    ; Prime nozzle with new filament
    {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
      G0 E{prime} F900
    {% endif %}

    {% if swap == 1 %}
      CLEAN_NOZZLE
    {% endif %}

    G0 Z{z} F900                                          ; restore Z height (including zhop)
    G0 X{x} Y{y} F6000                                    ; restore X/Y position
    RESTORE_GCODE_STATE NAME=PAUSE MOVE=0 MOVE_SPEED=60   ; restore original position (don't move)

    STATUS_PRINTING
    BASE_RESUME                                           ; resume print
  {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}    ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT

[gcode_macro M600]
description: Filament change
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE SWAP=1
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro FILAMENT_CHANGE]
description: Filament change
variable_skipped_first: 0
gcode:
    # Skip the first filament change since it is triggered before
    # the first layer is even started.
    {% if skipped_first == 0 %}
      SET_GCODE_VARIABLE MACRO=FILAMENT_CHANGE VARIABLE=skipped_first VALUE=1
    {% else %}
      SAVE_GCODE_STATE NAME=M600_state
      PAUSE SWAP=1
      RESTORE_GCODE_STATE NAME=M600_state
    {% endif %}
