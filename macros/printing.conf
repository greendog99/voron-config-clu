[gcode_macro PRIME_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=PRIME_NOZZLE_STATE
    STATUS_CLEANING
    M117 Priming nozzle...
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    G92 E0
    ; Move to start of line.
    G1 Z10 F900
    G1 Y2 X2 F18000
    G1 Z0.2 F900
    ; Print the line.
    G91                ; Relative coordinates.
    G1 X120 E30 F1000  ; Extrude filament 30mm (a bit more than retracted in PRINT_END).
    G1 Y-2 F1000
    G1 X-80 E12 F1000    ; Print second part of the line.
    G1 E-0.5 F3000      ; Retract to avoid stringing.
    G1 X0.5 E0 F1000    ; Wipe back to break string.
    G1 X-5.5 E0 F1000   ; Wipe forward to break string.
    STATUS_READY
    RESTORE_GCODE_STATE NAME=PRIME_NOZZLE_STATE

[gcode_macro PRINT_TEST]
description: Test some PRINT_START logic without actually printing
gcode:
    # Parameters from slicer
    {% set bed_temp = params.BED | int %}
    {% set extruder_temp = params.EXTRUDER | int %}
    {% set adaptive_mesh = params.AMESH | int %}


[gcode_macro COND_KAMP]
description: Perform adaptive bed mesh if no mesh is already loaded.
gcode:
  {% if printer.bed_mesh.profile_name == "" %}
    BED_MESH_CLEAR
    SETUP_KAMP_MESHING DISPLAY_PARAMETERS=0 LED_ENABLE=1 FUZZ_ENABLE=2
    M117 Adaptive bed meshing...
    BED_MESH_CALIBRATE
  {% endif %}


[gcode_macro PRINT_START]
description: Prepare the printer before starting a print.
gcode:
    # Parameters from slicer
    {% set bed_temp = params.BED | int %}
    {% set extruder_temp = params.EXTRUDER | int %}
    {% set adaptive_mesh = params.AMESH | int %}

    #
    # Start heating the bed and nozzle, and ensure the axes are homed and leveled.
    # Nozzle should be at 150C for any Tap probing.
    #

    M117 Heating and homing...
    STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150

    COND_G28    ; Z won't be quite right due to bed/nozzle temp, but will be re-homed later

    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp - 5}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM=147

    COND_QGL    ; quad gantry level if needed. Will trigger Z re-home when done.

    #
    # Load or create mesh
    #

    {% if adaptive_mesh == 1 %}
      # Trigger an adaptive bed mesh.
      M117 Preparing for adaptive bed meshing...
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp-2}
    {% else %}
      # Load a named mesh based on bed temperature.
      M117 Attempting to load mesh named {bed_temp}C
      BED_MESH_CLEAR
      BED_MESH_PROFILE LOAD={bed_temp}C
    {% endif %}

    COND_KAMP

    #
    # Get ready to print
    #

    G28 Z     ; rehome Z just in case things have changed a bit

    M117 Heating nozzle to {extruder_temp}...
    STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp - 5}

    M117 Starting print...
    CLEAN_NOZZLE
    PRIME_NOZZLE
    SFS_ENABLE
    STATUS_PRINTING

[gcode_macro PRINT_END]
gcode:
  # safe anti-stringing move coords
  {% set th = printer.toolhead %}
  {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
  {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
  {% set z_safe = [th.position.z + 20, th.axis_maximum.z]|min %}
  
  M400                           ; wait for buffer to clear
  G90                            ; absolute positioning
  G92 E0                         ; zero the extruder
  G1 E-5.0 F1800                 ; retract filament 5mm
  G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; quickly move nozzle to remove stringing
  G1 E-20.0 F1800                ; retract filament another 20mm, completely out of hot zone
  M107                           ; turn off fan

  SFS_DISABLE
  TURN_OFF_HEATERS
  G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 10} F5000  ; park nozzle at rear
  CLEAN_NOZZLE

  M117 Done.
